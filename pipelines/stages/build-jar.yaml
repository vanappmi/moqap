---
.job_template: &job_template
  tags:
    - $PROJECT_RUNNER_TAG

Build Jar:
  stage: build-jar
  <<: *job_template
  image: ${PROD_DOCKER_REPO}.bahnhub.tech.rz.db.de/basis-pipeline-image:version-3.4-multiarch
  before_script:
    - !reference [ .template secrets, script ]
    - export GRADLE_USER_HOME=`pwd`/.gradle
  cache:
    key:
      files:
        - gradle/wrapper/gradle-wrapper.properties
    paths:
      - ".gradle/caches"
      - ".gradle/wrapper"
      - cache/caches/
      - cache/notifications/
      - cache/wrapper/
    policy: pull-push
  script:
    - export GRADLE_OPTS="$GRADLE_OPTS_OWN"
    - echo $GRADLE_OPTS
    - echo $ARTIFACTORY_USER
    - mkdir -p ./artifacts/
    - chmod -v 777 ./gradlew
    - |
      if [ "$IS_COMMONLIB" == "true" ]; then
        if [ "$IS_B3_BOM" == "true" ]; then
          echo "build b3-bom"
          echo $(cat gradle.properties | grep "b3BomVersion" | cut -d "=" -f2 | tr -dc '0-9.')
          ./gradlew --build-cache --gradle-user-home cache/ build publish
        else
          ./gradlew --build-cache --gradle-user-home cache/ build jacocoTestCoverageVerification publish
          cp build/libs/*.jar ./artifacts/
        fi
      else
        ./gradlew --build-cache --gradle-user-home cache/ build jacocoTestCoverageVerification bootJar
        cp build/libs/*.jar ./artifacts/
      fi
  artifacts:
    paths:
      - artifacts/*
      - .gradle/
      - build/**/*
  variables:
    GRADLE_OPTS_OWN: "-Dhttps.proxyHost=webproxy.comp.db.de -Dhttps.proxyPort=8080 -Dhttp.nonProxyHosts=*.tech.rz.db.de|*.dbcs.db.de|*.amazonaws.com|*.aws.db.de|*.cluster.local|*.internal|*.intranet-test.deutschebahn.com|*.intranet.deutschebahn.com|*.mail.db.de|*.ose.db.de|*.rz.db.de|*.svc|*.unix.db.de|127.0.0.1|dbcs-Maste-C6UND8OK4HFR-3e69d5b84ddd5126.elb.eu-central-1.amazonaws.com|ip-10-107-227-150.eu-central-1.compute.internal|localhost|*.comp.db.de"
    SECRETS:
      ARTIFACTORY_USER:RUNNER_ARTIFACTORY_USER,
      ARTIFACTORY_PASSWORD:RUNNER_ARTIFACTORY_PASSWORD
