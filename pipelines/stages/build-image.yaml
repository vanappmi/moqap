---
.job_template: &job_template
  tags:
    - $PROJECT_RUNNER_TAG

Build Image AMD:
  stage: build-image
  image: ${PROD_DOCKER_REPO}.bahnhub.tech.rz.db.de/basis-pipeline-image:version-3.3-multiarch
  needs:
    - job: Build Jar
    - job: SonarQube
  tags:
    - ${PROJECT_RUNNER_TAG}
  artifacts:
    paths:
      - artifacts/*
  variables:
    STORAGE_DRIVER: vfs
    BUILDAH_FORMAT: docker
    BUILDAH_ISOLATION: chroot
    KANIKO_IMAGE_NAME: $CI_PROJECT_NAME
    KANIKO_SOURCE_REPO: ${PROD_DOCKER_REPO}
    MQP_BUILDA_REGISTRY_HOST: ${PROD_DOCKER_REPO}.bahnhub.tech.rz.db.de
    SECRETS:
      MQP_BUILDA_REGISTRY_USER:RUNNER_ARTIFACTORY_USER,
      MQP_BUILDA_REGISTRY_PASSWORD:RUNNER_ARTIFACTORY_PASSWORD
  script:
    - !reference [ .template secrets, script ]
    # Where to push to
    - export IMAGE="$CI_COMMIT_REF_NAME-$DEPLOY_ENV-$CI_COMMIT_SHORT_SHA"
    #
    - buildah -v
    #
    # Login
    - echo "buildah login"
    - buildah login -u "$MQP_BUILDA_REGISTRY_USER" -p "$MQP_BUILDA_REGISTRY_PASSWORD" "$MQP_BUILDA_REGISTRY_HOST"
    #
    - buildah info
    #
    ## Add here your architectures. One build per architecture
    # Build container for amd64 (x86_64) and arm64 (aarch64). Add more architectures as needed
    - buildah images
    - echo "buildah build amd64"
    - buildah build --format docker -f "Dockerfile" --build-arg ARCH=amd64 --tag "cna-bbpneo-dev-docker-stage-local.bahnhub.tech.rz.db.de/${CI_PROJECT_NAME}:$IMAGE-amd64" .
    - buildah images
    #
    - echo "buildah manifest push"
    - export MQP_BUILDA_REGISTRY_HOST=${DEV_DOCKER_REPO}.bahnhub.tech.rz.db.de
    - buildah login -u "$MQP_BUILDA_REGISTRY_USER" -p "$MQP_BUILDA_REGISTRY_PASSWORD" "$MQP_BUILDA_REGISTRY_HOST"
    - buildah push "cna-bbpneo-dev-docker-stage-local.bahnhub.tech.rz.db.de/${CI_PROJECT_NAME}:$IMAGE-amd64"

Build Image ARM:
  stage: build-image
  #image: moqap-docker-release-beta-local.bahnhub.tech.rz.db.de/buildah-image:init
  image: ${PROD_DOCKER_REPO}.bahnhub.tech.rz.db.de/basis-pipeline-image:version-3.3-multiarch
  needs:
    - job: Build Jar
    - job: SonarQube
  tags:
    - arm64
  artifacts:
    paths:
      - artifacts/*
  variables:
    STORAGE_DRIVER: vfs
    BUILDAH_FORMAT: docker
    BUILDAH_ISOLATION: chroot
    KANIKO_IMAGE_NAME: $CI_PROJECT_NAME
    KANIKO_SOURCE_REPO: ${PROD_DOCKER_REPO}
    MQP_BUILDA_REGISTRY_HOST: ${PROD_DOCKER_REPO}.bahnhub.tech.rz.db.de
    SECRETS:
      MQP_BUILDA_REGISTRY_USER:RUNNER_ARTIFACTORY_USER,
      MQP_BUILDA_REGISTRY_PASSWORD:RUNNER_ARTIFACTORY_PASSWORD
  script:
    - !reference [ .template secrets, script ]
    # Where to push to
    - export IMAGE="$CI_COMMIT_REF_NAME-$DEPLOY_ENV-$CI_COMMIT_SHORT_SHA"
    #
    - buildah -v
    #
    # Login
    - echo "buildah login"
    - buildah login -u "$MQP_BUILDA_REGISTRY_USER" -p "$MQP_BUILDA_REGISTRY_PASSWORD" "$MQP_BUILDA_REGISTRY_HOST"
    #
    - buildah info
    #
    ## Add here your architectures. One build per architecture
    # Build container for amd64 (x86_64) and arm64 (aarch64). Add more architectures as needed
    - buildah images
    - echo "buildah build arm64"
    #- buildah build --format docker -f "Dockerfile" --build-arg ARCH=arm64 --variant="v8" --tag "cna-bbpneo-dev-docker-stage-local.bahnhub.tech.rz.db.de/${CI_PROJECT_NAME}:$IMAGE-arm64" .
    - buildah build --format docker -f "Dockerfile" --build-arg ARCH=arm64 --platform="linux/arm64/v8" --tag "cna-bbpneo-dev-docker-stage-local.bahnhub.tech.rz.db.de/${CI_PROJECT_NAME}:$IMAGE-arm64" .
    - buildah images
    #
    - echo "buildah manifest push"
    - export MQP_BUILDA_REGISTRY_HOST=${DEV_DOCKER_REPO}.bahnhub.tech.rz.db.de
    - buildah login -u "$MQP_BUILDA_REGISTRY_USER" -p "$MQP_BUILDA_REGISTRY_PASSWORD" "$MQP_BUILDA_REGISTRY_HOST"
    - buildah push "cna-bbpneo-dev-docker-stage-local.bahnhub.tech.rz.db.de/${CI_PROJECT_NAME}:$IMAGE-arm64"

Build Image Manifest:
  needs:
    - job: Build Image AMD
    - job: Build Image ARM
  stage: build-image
  image: ${PROD_DOCKER_REPO}.bahnhub.tech.rz.db.de/basis-pipeline-image:version-3.3-multiarch
  tags:
    - ${PROJECT_RUNNER_TAG}
  artifacts:
    paths:
      - artifacts/*
  variables:
    STORAGE_DRIVER: vfs
    BUILDAH_FORMAT: docker
    BUILDAH_ISOLATION: chroot
    KANIKO_IMAGE_NAME: $CI_PROJECT_NAME
    KANIKO_SOURCE_REPO: ${PROD_DOCKER_REPO}
    MQP_BUILDA_REGISTRY_HOST: ${DEV_DOCKER_REPO}.bahnhub.tech.rz.db.de
    SECRETS:
      MQP_BUILDA_REGISTRY_USER:RUNNER_ARTIFACTORY_USER,
      MQP_BUILDA_REGISTRY_PASSWORD:RUNNER_ARTIFACTORY_PASSWORD
  script:
    - !reference [ .template secrets, script ]
    - !reference [ .template secrets, script ]
    # Manifest name, can be anything
    - export MANIFEST="${CI_PROJECT_NAME}-multiarch"
    # Where to push to
    - export IMAGE="$CI_COMMIT_REF_NAME-$DEPLOY_ENV-$CI_COMMIT_SHORT_SHA"
    #
    - buildah -v
    #
    # Login
    - echo "buildah login"
    - buildah login -u "$MQP_BUILDA_REGISTRY_USER" -p "$MQP_BUILDA_REGISTRY_PASSWORD" "$MQP_BUILDA_REGISTRY_HOST"
    #
    - set -x
    - buildah info
    # Create manifest
    - echo "buildah manifest create"
    - buildah manifest create "cna-bbpneo-dev-docker-stage-local.bahnhub.tech.rz.db.de/${CI_PROJECT_NAME}:$IMAGE"
    #
    - echo "buildah manifest add"
    - buildah manifest add --arch amd64 "cna-bbpneo-dev-docker-stage-local.bahnhub.tech.rz.db.de/${CI_PROJECT_NAME}:$IMAGE" "cna-bbpneo-dev-docker-stage-local.bahnhub.tech.rz.db.de/${CI_PROJECT_NAME}:$IMAGE-amd64"
    - buildah manifest add --arch arm64 "cna-bbpneo-dev-docker-stage-local.bahnhub.tech.rz.db.de/${CI_PROJECT_NAME}:$IMAGE" "cna-bbpneo-dev-docker-stage-local.bahnhub.tech.rz.db.de/${CI_PROJECT_NAME}:$IMAGE-arm64"
    # Push the manifest, this will include all architectures you build for before
    - echo "buildah manifest push"
    - export MQP_BUILDA_REGISTRY_HOST=${DEV_DOCKER_REPO}.bahnhub.tech.rz.db.de
    - buildah login -u "$MQP_BUILDA_REGISTRY_USER" -p "$MQP_BUILDA_REGISTRY_PASSWORD" "$MQP_BUILDA_REGISTRY_HOST"
    - buildah manifest push --format v2s2 --all "cna-bbpneo-dev-docker-stage-local.bahnhub.tech.rz.db.de/${CI_PROJECT_NAME}:$IMAGE" "docker://cna-bbpneo-dev-docker-stage-local.bahnhub.tech.rz.db.de/${CI_PROJECT_NAME}:$IMAGE"
