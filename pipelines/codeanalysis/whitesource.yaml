include:
  - project: "moqap/modules"
    ref: "4.0.7"
    file: "/whitesource/whitesource.yml"

variables:
  WHITESOURCE_APIKEY: $wss_apikey
  WHITESOURCE_USERKEY: $wss_user_key
  WHITESOURCE_PROJECTTOKEN: $wss_project_token
  WHITESOURCE_PRODUCTTOKEN: $wss_product_token
  WHITESOURCE_DISABLE: "false"

Whitesource:
  extends: .Whitesource Scan Gradle
  stage: static-codeanalysis
  variables:
    WS_SERVER_URL: "https://whitesource.int-app.comp.db.de/agent"
    WS_API_URL: "https://whitesource.int-app.comp.db.de/api"
    WS_CONFIG_FILE: "$CI_PROJECT_DIR/config/whitesource.cfg"
    WS_PROJECT_NAME: "${CI_PROJECT_NAME}"
    WS_PROJECT_VERSION: "${CI_COMMIT_REF_NAME}"
    WHITESOURCE_apiKey: $WHITESOURCE_APIKEY
    WHITESOURCE_projectToken: $WHITESOURCE_PROJECTTOKEN
    WHITESOURCE_userKey: $WHITESOURCE_USERKEY
    WHITESOURCE_productToken: $WHITESOURCE_PRODUCTTOKEN
    WHITESOURCE_projectVersion: ${CI_COMMIT_REF_NAME}
  tags:
    - $PROJECT_RUNNER_TAG
  before_script:
    - export WHITESOURCE_PRODUCT_TOKEN="$WHITESOURCE_PRODUCTTOKEN"
    - export WHITESOURCE_API_KEY="$WHITESOURCE_APIKEY"
    - export WHITESOURCE_PROJECT_TOKEN="$WHITESOURCE_PROJECTTOKEN"
    - export WHITESOURCE_USER_KEY="$WHITESOURCE_USERKEY"
    - export WHITESOURCE_CONFIG_FILE="$WS_CONFIG_FILE"
    - export GRADLE_OPTS="$GRADLE_OPTS_OWN"
    - echo $GRADLE_OPTS
    - ./gradlew clean build bootJar -x test
  after_script:
    - cp whitesource/*/* artifacts/
  artifacts:
    paths:
      - whitesource/**/*
      - artifacts/**/*
  only:
    - branches
  except:
    variables:
      - $WHITESOURCE_DISABLE == "true"


