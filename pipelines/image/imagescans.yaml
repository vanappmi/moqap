---
include:
  - "/pipelines/settings.yaml"

variables:
  PROJECT_RUNNER_TAG: "eks-entwicklung"
  DEPLOY_ENV: "dev"
  CI_REGISTRY: "${DEV_DOCKER_REPO}.bahnhub.tech.rz.db.de"
  KANIKO_IMAGE_TAG: $CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
  MQP_TRIVY_TARGET: "$CI_REGISTRY/$CI_PROJECT_NAME:$KANIKO_IMAGE_TAG"
  SOURCE_DOCKER_REPO: ${DEV_DOCKER_REPO}
  TARGET_DOCKER_REPO: ${PROD_DOCKER_REPO}
  ARTIFACT_NAME: $CI_PROJECT_NAME

Scan basis-pipeline-image:version-3:
  variables:
    SCAN_TARGET: "cna-bbpneo-prod-docker-stage-local.bahnhub.tech.rz.db.de/basis-pipeline-image:version-3"
    MQP_TRIVY_TARGET: $SCAN_TARGET
    MQP_ANCHOR_TARGET: $SCAN_TARGET
    MQP_DEFDOJ_PRODUCT_NAME: "basis-pipeline-image:version-3"
  trigger:
    include:
      - project: "cnp/bbpneo/02-ops/moqap" # moqap moqap project
        ref: "$CURRENT_VERSION" # branch
        file: "pipelines/security/security-scan-suite.yaml"
    strategy: depend

Scan basis-deployment-image:java-21:
  variables:
    SCAN_TARGET: "cna-bbpneo-prod-docker-stage-local.bahnhub.tech.rz.db.de/basis-deployment-image:java-21"
    MQP_TRIVY_TARGET: $SCAN_TARGET
    MQP_ANCHOR_TARGET: $SCAN_TARGET
    MQP_DEFDOJ_PRODUCT_NAME: "basis-deployment-image:java-21"
  trigger:
    include:
      - project: "cnp/bbpneo/02-ops/moqap" # moqap moqap project
        ref: "$CURRENT_VERSION" # branch
        file: "pipelines/security/security-scan-suite.yaml"
    strategy: depend

Scan amazoncorretto:21-alpine:
  variables:
    SCAN_TARGET: "docker-hub-remote.bahnhub.tech.rz.db.de/amazoncorretto:21-alpine"
    MQP_TRIVY_TARGET: $SCAN_TARGET
    MQP_ANCHOR_TARGET: $SCAN_TARGET
    MQP_DEFDOJ_PRODUCT_NAME: "amazoncorretto:21-alpine"
  trigger:
    include:
      - project: "cnp/bbpneo/02-ops/moqap" # moqap moqap project
        ref: "$CURRENT_VERSION" # branch
        file: "pipelines/security/security-scan-suite.yaml"
    strategy: depend

Scan aws-cli:latest:
  variables:
    SCAN_TARGET: "docker-hub-remote.bahnhub.tech.rz.db.de/amazon/aws-cli:latest"
    MQP_TRIVY_TARGET: $SCAN_TARGET
    MQP_ANCHOR_TARGET: $SCAN_TARGET
    MQP_DEFDOJ_PRODUCT_NAME: "aws-cli:latest"
  trigger:
    include:
      - project: "cnp/bbpneo/02-ops/moqap" # moqap moqap project
        ref: "$CURRENT_VERSION" # branch
        file: "pipelines/security/security-scan-suite.yaml"
    strategy: depend

Scan gitlab-runner-helper:x86_64-bleeding:
  variables:
    SCAN_TARGET: "gitlab-docker-remote.bahnhub.tech.rz.db.de/gitlab-org/gitlab-runner/gitlab-runner-helper:x86_64-bleeding"
    MQP_TRIVY_TARGET: $SCAN_TARGET
    MQP_ANCHOR_TARGET: $SCAN_TARGET
    MQP_DEFDOJ_PRODUCT_NAME: "gitlab-runner-helper:x86_64-bleeding"
  trigger:
    include:
      - project: "cnp/bbpneo/02-ops/moqap" # moqap moqap project
        ref: "$CURRENT_VERSION" # branch
        file: "pipelines/security/security-scan-suite.yaml"
    strategy: depend

Scan gitlab-runner:alpine3.19-bleeding:
  variables:
    SCAN_TARGET: "docker-hub-remote.bahnhub.tech.rz.db.de/gitlab/gitlab-runner:alpine3.19-bleeding"
    MQP_TRIVY_TARGET: $SCAN_TARGET
    MQP_ANCHOR_TARGET: $SCAN_TARGET
    MQP_DEFDOJ_PRODUCT_NAME: "gitlab-runner:alpine3.19-bleeding"
  trigger:
    include:
      - project: "cnp/bbpneo/02-ops/moqap" # moqap moqap project
        ref: "$CURRENT_VERSION" # branch
        file: "pipelines/security/security-scan-suite.yaml"
    strategy: depend

#Scan sonarqube:10.0.0-community:
#  stage: security-scan
#  variables:
#    MQP_TRIVY_TARGET: "docker-hub-remote.bahnhub.tech.rz.db.de/library/sonarqube:10.0.0-community"
#  trigger:
#    include:
#      - project: "cnp/bbpneo/02-ops/moqap" # moqap moqap project
#        ref: "$CURRENT_VERSION" # branch
#        file: "pipelines/trivy/trivy-scanimage.yaml"
#    strategy: depend

Scan postgres-image:postgres-17:
  variables:
    SCAN_TARGET: "cna-bbpneo-prod-docker-stage-local.bahnhub.tech.rz.db.de/postgres-image:postgres-17"
    MQP_TRIVY_TARGET: $SCAN_TARGET
    MQP_ANCHOR_TARGET: $SCAN_TARGET
    MQP_DEFDOJ_PRODUCT_NAME: "postgres-image:postgres-17"
  trigger:
    include:
      - project: "cnp/bbpneo/02-ops/moqap" # moqap moqap project
        ref: "$CURRENT_VERSION" # branch
        file: "pipelines/security/security-scan-suite.yaml"
    strategy: depend

Scan renovate/renovate:39.169:
  variables:
    SCAN_TARGET: "docker-hub-remote.bahnhub.tech.rz.db.de/renovate/renovate:39.169"
    MQP_TRIVY_TARGET: $SCAN_TARGET
    MQP_ANCHOR_TARGET: $SCAN_TARGET
    MQP_DEFDOJ_PRODUCT_NAME: "renovate:39.169"
  trigger:
    include:
      - project: "cnp/bbpneo/02-ops/moqap" # moqap moqap project
        ref: "$CURRENT_VERSION" # branch
        file: "pipelines/security/security-scan-suite.yaml"
    strategy: depend

Scan blackbox-exporter:v0.26.0:
  variables:
    SCAN_TARGET: "docker-hub-remote.bahnhub.tech.rz.db.de/prom/blackbox-exporter:v0.26.0"
    MQP_TRIVY_TARGET: $SCAN_TARGET
    MQP_ANCHOR_TARGET: $SCAN_TARGET
    MQP_DEFDOJ_PRODUCT_NAME: "blackbox-exporter:v0.26.0"
  trigger:
    include:
      - project: "cnp/bbpneo/02-ops/moqap" # moqap moqap project
        ref: "$CURRENT_VERSION" # branch
        file: "pipelines/security/security-scan-suite.yaml"
    strategy: depend

#Scan blackbox-exporter:blackbox-exporter-0.25.0:
#  stage: security-scan
#  variables:
#    MQP_TRIVY_TARGET: "cna-bbpneo-prod-docker-stage-local.bahnhub.tech.rz.db.de/blackbox-exporter:blackbox-exporter-0.25.0"
#  trigger:
#    include:
#      - project: "cnp/bbpneo/02-ops/moqap" # moqap moqap project
#        ref: "$CURRENT_VERSION" # branch
#        file: "pipelines/trivy/trivy-scanimage.yaml"
#    strategy: depend

Scan postgres-exporter:v0.17.1:
  variables:
    SCAN_TARGET: "docker-hub-remote.bahnhub.tech.rz.db.de/prometheuscommunity/postgres-exporter:v0.17.1"
    MQP_TRIVY_TARGET: $SCAN_TARGET
    MQP_ANCHOR_TARGET: $SCAN_TARGET
    MQP_DEFDOJ_PRODUCT_NAME: "postgres-exporter:v0.17.1"
  trigger:
    include:
      - project: "cnp/bbpneo/02-ops/moqap" # moqap moqap project
        ref: "$CURRENT_VERSION" # branch
        file: "pipelines/security/security-scan-suite.yaml"
    strategy: depend

#Scan postgres-exporter:postgres-exporter-0.16.0:
#  stage: security-scan
#  variables:
#    MQP_TRIVY_TARGET: "cna-bbpneo-prod-docker-stage-local.bahnhub.tech.rz.db.de/postgres-exporter:postgres-exporter-0.16.0"
#  trigger:
#    include:
#      - project: "cnp/bbpneo/02-ops/moqap" # moqap moqap project
#        ref: "$CURRENT_VERSION" # branch
#        file: "pipelines/trivy/trivy-scanimage.yaml"
#    strategy: depend

#Scan pushgateway:v1.4.2:
#  stage: security-scan
#  variables:
#    MQP_TRIVY_TARGET: "docker-hub-remote.bahnhub.tech.rz.db.de/prom/pushgateway:v1.4.2"
#  trigger:
#    include:
#      - project: "cnp/bbpneo/02-ops/moqap" # moqap moqap project
#        ref: "$CURRENT_VERSION" # branch
#        file: "pipelines/trivy/trivy-scanimage.yaml"
#    strategy: depend

Scan pushgateway:pushgateway-1.10.0:
  variables:
    SCAN_TARGET: "cna-bbpneo-prod-docker-stage-local.bahnhub.tech.rz.db.de/pushgateway:pushgateway-1.10.0"
    MQP_TRIVY_TARGET: $SCAN_TARGET
    MQP_ANCHOR_TARGET: $SCAN_TARGET
    MQP_DEFDOJ_PRODUCT_NAME: "pushgateway:pushgateway-1.10.0"
  trigger:
    include:
      - project: "cnp/bbpneo/02-ops/moqap" # moqap moqap project
        ref: "$CURRENT_VERSION" # branch
        file: "pipelines/security/security-scan-suite.yaml"
    strategy: depend

Scan golang:golang-1.24.0:
  variables:
    SCAN_TARGET: "cna-bbpneo-prod-docker-stage-local.bahnhub.tech.rz.db.de/golang:golang-1.24.0"
    MQP_TRIVY_TARGET: $SCAN_TARGET
    MQP_ANCHOR_TARGET: $SCAN_TARGET
    MQP_DEFDOJ_PRODUCT_NAME: "golang:golang-1.24.0"
  trigger:
    include:
      - project: "cnp/bbpneo/02-ops/moqap" # moqap moqap project
        ref: "$CURRENT_VERSION" # branch
        file: "pipelines/security/security-scan-suite.yaml"
    strategy: depend
