---
include:
  - project: "moqap/modules"
    ref: "5.0.0"
    file:
      - "/artifactory/download_artifacts_dir.yml" #gibt es noch nicht in den includes muss in pipeline.yaml hinterlegt werden
      - "/artifactory/clean_artifactory.yml"
      - "/artifactory/upload_artifacts_dir.yml"
      - "/eks/kaniko/kaniko.yml"
  - "/pipelines/settings.yaml"

.job_template: &job_template
  tags:
    - $PROJECT_RUNNER_TAG

variables:
  PROJECT_RUNNER_TAG: "eks-entwicklung"
  MAVEN_DOCKER_REPO: "cna-bbpneo-commonlibs-maven-stage-local"
  ARTIFACTORY_URL: "https://bahnhub.tech.rz.db.de/artifactory/"
  ARTIFACT_NAME: $CI_PROJECT_NAME
  DEPLOY_ENV: "dev"
  BIZHUB_DISABLE: "false"
  JUNIT_REPORT_FILENAME: "results.octane.xml"
  SECRETS:
    BETRAANTRAG_USERNAME:BETRAANTRAG_USERNAME,
    BETRAANTRAG_PASSWORD:BETRAANTRAG_PASSWORD

stages:
  - build-jar
  - upload
  - integrationtest

Build Jar:
  stage: build-jar
  <<: *job_template
  image: docker-hub-remote.bahnhub.tech.rz.db.de/openjdk:19-jdk-alpine3.16
  script:
    - export GRADLE_OPTS="$GRADLE_OPTS_OWN"
    - echo $GRADLE_OPTS
    - chmod +x ./gradlew
    - ./gradlew clean jar
    - mkdir -p ./artifacts/
    - cp build/libs/*.jar ./artifacts/
  only:
    - branches
  artifacts:
    paths:
      - artifacts/*
      - .gradle/
  variables:
    GRADLE_OPTS_OWN: "-Xdebug -XshowSettings -Xdiag  -Dhttps.proxyHost=webproxy.comp.db.de -Dhttps.proxyPort=8080 -Dhttp.nonProxyHosts=*.tech.rz.db.de|*.dbcs.db.de|*.amazonaws.com|*.aws.db.de|*.cluster.local|*.internal|*.intranet-test.deutschebahn.com|*.intranet.deutschebahn.com|*.mail.db.de|*.ose.db.de|*.rz.db.de|*.svc|*.unix.db.de|127.0.0.1|dbcs-Maste-C6UND8OK4HFR-3e69d5b84ddd5126.elb.eu-central-1.amazonaws.com|ip-10-107-227-150.eu-central-1.compute.internal|localhost|*.comp.db.de"

Upload Artifacts:
  stage: upload
  extends: .Upload-Artifacts
  <<: *job_template
  only:
    - master
  environment:
    name: ${DEPLOY_ENV}
  artifacts:
    paths:
      - artifacts/*
  dependencies:
    - Build Jar
  needs:
    - job: Build Jar
  variables:
    TARGET_PATH: "$MAVEN_DOCKER_REPO/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME/$CI_ENVIRONMENT_SLUG/"
    ARTIFACTS_DIR: "artifacts"
    SECRETS:
      ARTIFACTORY_USER:RUNNER_ARTIFACTORY_USER,
      ARTIFACTORY_PASSWORD:RUNNER_ARTIFACTORY_PASSWORD
  after_script:
    - echo "MAVEN_DOCKER_REPO '$MAVEN_DOCKER_REPO'"
    - echo "CI_PROJECT_NAMESPACE '$CI_PROJECT_NAMESPACE'"
    - echo "CI_PROJECT_NAME '$CI_PROJECT_NAME'"
    - echo "CI_COMMIT_REF_NAME '$CI_COMMIT_REF_NAME'"
    - echo "DEPLOY_ENV '$DEPLOY_ENV'"
    - echo $TARGET_PATH

Download Dependencies:
  extends: .Download-Artifacts
  only:
    - master
  stage: integrationtest
  <<: *job_template
  after_script:
    - echo $ARTIFACTORY_PATH
    - echo $TARGET_PATH
    - mkdir -p ./artifacts/
    - ls -lR download
    - cp download/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME/$DEPLOY_ENV/artifacts/testframework-1.0-SNAPSHOT-all.jar  artifacts
  variables:
    ARTIFACTORY_PATH: "$MAVEN_DOCKER_REPO/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME/$CI_ENVIRONMENT_SLUG"
    TARGET_DIR: "download"
    SECRETS:
      ARTIFACTORY_USER:RUNNER_ARTIFACTORY_USER,
      ARTIFACTORY_PASSWORD:RUNNER_ARTIFACTORY_PASSWORD
  artifacts:
    paths:
      - artifacts/*
  except:
    variables:
      - $BIZHUB_DISABLE == "true"

Download Secrets:
  stage: integrationtest
  only:
    - master
  <<: *job_template
  needs:
    - job: Download Dependencies
      artifacts: true
  image: docker-hub-remote.bahnhub.tech.rz.db.de/openjdk:19-jdk-alpine3.16
  script:
    - getSecret() { awk -F\""$1"\":\" '{if (NF > 1 ) print $2; else exit 1;}' < "$2" | awk -F"\",\"|\"}" '{print $1}' || FAIL="$3\n-> $4" ; }
    - echo $RUNNER_MOUNT_PATH
    - export BETRAANTRAG_PASSWORD=password
    - export BETRAANTRAG_USERNAME=hallo world
    - echo $BETRAANTRAG_USERNAME
    - echo $BETRAANTRAG_PASSWORD
    - echo "BETRAANTRAG_USERNAME=$BETRAANTRAG_USERNAME" >> betrauser.env
    - echo "BETRAANTRAG_PASSWORD=$BETRAANTRAG_PASSWORD" >> betrauser.env
  artifacts:
    reports:
      dotenv: betrauser.env

Integration Test:
  stage: integrationtest
  <<: *job_template
  image: docker-hub-remote.bahnhub.tech.rz.db.de/openjdk:19-jdk-alpine3.16
  only:
    - master
  needs:
    - job: Download Dependencies
      artifacts: true
    - job: Download Secrets
  dependencies:
    - Download Dependencies
    - Download Secrets
  script:
    - echo $BETRAANTRAG_USERNAME
    - echo $BETRAANTRAG_PASSWORD
    - java -jar ./artifacts/testframework-1.0-SNAPSHOT-all.jar
  artifacts:
    when: always
    name: "Cucumber Report"
    paths:
      - cucumber.html
      - ${JUNIT_REPORT_FILENAME}
    reports:
      junit: ${JUNIT_REPORT_FILENAME}
  except:
    variables:
      - $BIZHUB_DISABLE == "true"
