---
### Imports ###
include:
  - project: "moqap/starterpaket/pipeline"
    ref: "10.0.0"
    file:
      - "template.yaml"


### Stages ###
stages:
  - secrets scan
  - lint
  - unittest
  - compile
  - build
  - upload-charts
  - security-scan
  - deploy
  - pentest
  - cleanup


### Variablen ###
# Globale Variablen #
variables:
  GRADLE_USER_HOME: "./${PROJECT_FOLDER}/.gradle"
  GRADLE_OPTS_OWN: "-Xdebug -XshowSettings -Xdiag -Dhttps.proxyHost=webproxy.comp.db.de -Dhttps.proxyPort=8080 -Dhttp.nonProxyHosts=*.tech.rz.db.de|*.dbcs.db.de|*.amazonaws.com|*.aws.db.de|*.cluster.local|*.internal|*.intranet-test.deutschebahn.com|*.intranet.deutschebahn.com|*.mail.db.de|*.ose.db.de|*.rz.db.de|*.svc|*.unix.db.de|127.0.0.1|dbcs-Maste-C6UND8OK4HFR-3e69d5b84ddd5126.elb.eu-central-1.amazonaws.com|ip-10-107-227-150.eu-central-1.compute.internal|localhost|*.comp.db.de"
  HTTP_PROXY: "http://webproxy.comp.db.de:8080"
  HTTPS_PROXY: $HTTP_PROXY
  NO_PROXY: ".tech.rz.db.de,.rz.db.de,.pulumi.com,.amazon.com,.amazonaws.com,.aws.db.de,.cluster.local,.comp.db.de,.dbcs.db.de,.internal,.intranet-test.deutschebahn.com,.intranet.deutschebahn.com,.mail.db.de,.ose.db.de,.rz.db.de,.svc,.unix.db.de,10.193.0.1,127.0.0.1,169.254.169.254,dbcs-Maste-C6UND8OK4HFR-3e69d5b84ddd5126.elb.eu-central-1.amazonaws.com,ip-10-107-227-150.eu-central-1.compute.internal,localhost,172.20.0.1"
  http_proxy: $HTTP_PROXY
  https_proxy: $HTTP_PROXY
  no_proxy: $NO_PROXY
  ARTIFACTS_DIR: "artifacts"
  AWS_SM_SECRET_PATH: "/run/secrets/moq-ap/bbpneo-prod-kaba-secrets-prod"
  # Starterpaktet Config Variablen #
  MQP_STAPAK_PROJECT_RUNNER_TAG: prod
  MQP_STAPAK_PROJECT_NAMESPACE: bbpneo-prod
  MQP_STAPAK_PROJECT_SHORT: camunda
  # Trivy #
  TRIVY_EXIT_CODE_LOW: 0
  TRIVY_EXIT_CODE_MEDIUM: 0
  TRIVY_EXIT_CODE_CRITICAL: 1
  TRIVY_SEVERITY: "CRITICAL"
  # Argo #
  MQP_ARGOCD_UPDATE_TARGET_REVISION: "true"
  MQP_ARGOCD_TRIGGER_SYNC: "false"
  MQP_ARGOCD_WAIT_FOR_SYNC: "false"

  MQP_ARGOCD_REFRESH_TARGET_APP: "bbpneo-prod"
  MQP_ARGOCD_APP_NAME: "bbpneo-prod-$ARGO_CD_APP_NAME"
  MQP_ARGOCD_AUTH_TOKEN: "BBPNEO_PROD_OPS_ARGOCD_SYNC_TOKEN"

#### Build Jobs ###
build_npm:
  stage: compile
  image: cna-bbpneo-prod-docker-stage-local.bahnhub.tech.rz.db.de/basis-pipeline-image:version-3.3-multiarch
  script:
    - cd ./${PROJECT_FOLDER}
    - npm install
    - npm run generate:api
    - npm run build:prod
    - npm run test
  artifacts:
    paths:
      - ${PROJECT_FOLDER:+${PROJECT_FOLDER}/}dist
      - ${PROJECT_FOLDER:+${PROJECT_FOLDER}/}node_modules/*
      - ${PROJECT_FOLDER:+${PROJECT_FOLDER}/}coverage/*
      - ${PROJECT_FOLDER:+${PROJECT_FOLDER}/}package-lock.json
  rules:
    - if: '$PROJECT_FOLDER != "backend"'
      when: on_success
    - when: never


compile_gradle:
  stage: compile
  image: docker-hub-remote.bahnhub.tech.rz.db.de/amazoncorretto:21-alpine
  script:
    - cd ./${PROJECT_FOLDER}
    - export GRADLE_OPTS="$GRADLE_OPTS_OWN"
    - chmod +x ./gradlew
    - ./gradlew build jacocoTestCoverageVerification bootJar --parallel --max-workers 3 --info --gradle-user-home
      .gradle/ --build-cache
  artifacts:
    paths:
      - ${PROJECT_FOLDER}/build/*
      - ${PROJECT_FOLDER}/build/reports/jacoco/test
  rules:
    - if: '$PROJECT_FOLDER == "backend"'
      when: on_success
    - when: never


### Upload HELM Charts ###
upload_helmcharts:
  image: dbnetzcio-sandbox-docker-prod-local.bahnhub.tech.rz.db.de/helm-deploy:1.7.3
  needs:
    - job: build_npm
      optional: true
    - job: compile_gradle
      optional: true
  variables:
    CHART_TAG: $PROJECT_VERSION
  before_script:
    - export HTTP_PROXY="http://webproxy.comp.db.de:8080";
    - export HTTPS_PROXY="http://webproxy.comp.db.de:8080";
    - export http_proxy="http://webproxy.comp.db.de:8080";
    - export https_proxy="http://webproxy.comp.db.de:8080";
    - apt-get update -y && apt-get install -y wget;
    - wget https://github.com/mikefarah/yq/releases/download/v4.27.3/yq_linux_amd64.tar.gz -O - | tar xz && mv yq_linux_amd64 /usr/bin/yq;
    - cd $CHART_PATH;
    - ls -a;
    - if [[ -n "$CI_COMMIT_TAG" ]]; then
      echo "Commit Tag has been set. Version will be updated to $CI_COMMIT_TAG in Helm-Charts!";
      yq -i e '.version |= strenv(CI_COMMIT_TAG)' Chart.yaml;
      yq -i e '.appVersion |= strenv(CI_COMMIT_TAG)' Chart.yaml;
      else
      echo "No Commit Tag has been set. Version will be updated to $CHART_TAG in Helm-Charts!";
      export new_value="$CHART_TAG";
      yq -i e '.version |= strenv(new_value)' Chart.yaml;
      yq -i e '.appVersion |= strenv(new_value)' Chart.yaml;
      fi
    - cat Chart.yaml;
    - cd $CI_PROJECT_DIR;
    - unset http_proxy HTTP_PROXY https_proxy HTTPS_PROXY;
  rules:
    - if: '($CI_COMMIT_BRANCH == "main") && ($RUN_UPLOAD_CHARTS == "yes")'
    - when: never

### Trivy Scan ###
trivy_scan_image:
  allow_failure: true
  needs:
    - job: build_and_push_image
  variables:
    TRIVY_TARGET: "$CI_REGISTRY/$DEPLOY_PATH_NAME:$PROJECT_VERSION"
  rules:
    - if: '($CI_COMMIT_BRANCH == "main") && ($RUN_SECURITY_SCAN == "yes")'
    - when: never


### build and push image ###
build_and_push_image:
  needs:
    - job: build_npm
      optional: true
    - job: compile_gradle
      optional: true
  variables:
    KANIKO_IMAGE_TAG: $PROJECT_VERSION
  rules:
    - if: '($CI_COMMIT_BRANCH == "main") && ($RUN_BUILD == "yes")'
    - when: never


### deploy ###
deploy_argo:
  variables:
    MQP_ARGOCD_HELM_VALUES_DEPLOYMENT_REF: $PROJECT_VERSION
    MQP_ARGOCD_APP_SPEC_PATH: $MQP_ARGOCD_APP_SPEC_PROD_PATH
    MQP_ARGOCD_YQ_CUSTOM_EXPRESSION: $MQP_ARGOCD_HELM_VALUES_PROD_EXPRESSION
    MQP_ARGOCD_REFRESH_TARGET_APP: $MQP_ARGOCD_REFRESH_TARGET_APP
    SECRETS:
      MQP_ARGOCD_OPS_REPO_ACCESS_TOKEN:$MQP_ARGOCD_OPS_REPO_ACCESS_TOKEN
