include:
  - project: "moqap/modules"
    ref: "3.3.4"
    file:
      - "/artifactory/upload_artifacts_dir.yml"
      - "/lint/helm/lint_helm.yml"
      - "/lint/dockerfile/lint_dockerfile.yml"
      - "/jmeter/jmeter.yml"
      - "/eks/kaniko/kaniko.yml"
      - "/trivy/trivy.yml"
  - "/pipelines/codeanalysis/sonarqube.yml"
  - "/pipelines/codeanalysis/whitesource.yml"
  - "/pipelines/settings.yml"
  - "/pipelines/deployment.yml"

stages:
  - .pre
  - static-codeanalysis
  - build-jar
  - build-image
  - upload
  - security-scan
  - argo-cd-deploy
  - bizhub-deploy
  - dynamic-test
  - .post

lint_helm:
  extends: .lint_helm
  stage: static-codeanalysis
  tags:
    - eks-dev
  variables:
    LINT_HELM_PATH: "./helm-charts/eks"

lint_dockerfile:
  extends: .lint_dockerfile
  stage: static-codeanalysis
  tags:
    - eks-dev
  variables:
    LINT_DOCKERFILE_PATH: "Dockerfile"

Build Jar:
  stage: build-jar
  tags:
    - eks-dev
  image: docker-hub-remote.bahnhub.tech.rz.db.de/openjdk:19-jdk-alpine3.16
  dependencies:
    - lint_dockerfile
    - lint_helm
    - SonarQube
    - Whitesource
  needs:
    - job: lint_dockerfile
    - job: lint_helm
    - job: SonarQube
    - job: Whitesource
  script:
    - export GRADLE_OPTS="$GRADLE_OPTS_OWN"
    - echo $GRADLE_OPTS
    - ./gradlew clean build jacocoTestCoverageVerification bootJar
    - mkdir -p ./artifacts/
    - cp build/libs/*.jar ./artifacts/
  only:
    - branches
  artifacts:
    paths:
      - src/target/*
      - artifacts/*
      - .gradle/
  variables:
    GRADLE_OPTS_OWN: "-Xdebug -XshowSettings -Xdiag  -Dhttps.proxyHost=webproxy.comp.db.de -Dhttps.proxyPort=8080 -Dhttp.nonProxyHosts=*.tech.rz.db.de|*.dbcs.db.de|*.amazonaws.com|*.aws.db.de|*.cluster.local|*.internal|*.intranet-test.deutschebahn.com|*.intranet.deutschebahn.com|*.mail.db.de|*.ose.db.de|*.rz.db.de|*.svc|*.unix.db.de|127.0.0.1|dbcs-Maste-C6UND8OK4HFR-3e69d5b84ddd5126.elb.eu-central-1.amazonaws.com|ip-10-107-227-150.eu-central-1.compute.internal|localhost|*.comp.db.de"

Build Image STAGE:
  extends: .kaniko-build
  dependencies:
    - Build Jar
  needs:
    - job: Build Jar
  stage: build-image
  tags:
    - eks-dev
  only:
    - branches
  environment:
    name: ${DEPLOY_ENV}
  artifacts:
    paths:
      - artifacts/*
  variables:
    KANIKO_IMAGE_NAME: $PROJECT_NAME
    KANIKO_IMAGE_TAG: "$CI_COMMIT_REF_NAME-$CI_ENVIRONMENT_SLUG-$CI_COMMIT_SHORT_SHA"

Upload Artifacts STAGE:
  stage: upload
  extends: .Upload-Artifacts
  tags:
    - eks-dev
  only:
    - branches
  environment:
    name: ${DEPLOY_ENV}
  artifacts:
    paths:
      - artifacts/*
  dependencies:
    - Build Image STAGE
  needs:
    - job: Build Image STAGE
  variables:
    TARGET_PATH: "$DEV_DOCKER_REPO/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME/$CI_COMMIT_SHORT_SHA/$CI_ENVIRONMENT_SLUG/"
    ARTIFACTS_DIR: "artifacts"
    ARTIFACTORY_USER: $ARTIFACTORY_USER
    ARTIFACTORY_PASSWORD: $ARTIFACTORY_PASSWORD
    ARTIFACTORY_URL: "https://bahnhub.tech.rz.db.de/artifactory/"

Trivy Check Image:
  extends: .Trivy Scan
  stage: security-scan
  needs:
    - job: Upload Artifacts STAGE
  tags:
    - eks-dev
  variables:
    TRIVY_ADD_CMD: "--no-progress --timeout 30m --offline-scan --debug --scanners vuln"
    TRIVY_USERNAME: $ARTIFACTORY_USER
    TRIVY_PASSWORD: $ARTIFACTORY_PASSWORD
    TRIVY_TARGET: "$CI_REGISTRY/$CI_PROJECT_NAME:$CI_COMMIT_REF_NAME-$DEPLOY_ENV-$CI_COMMIT_SHORT_SHA"
  rules:
    - if: $CI_COMMIT_BRANCH && ($DEPLOY_ENV == "dev" || $DEPLOY_ENV == "int")
      allow_failure: true
    - if: $CI_COMMIT_BRANCH && ($DEPLOY_ENV  == "au" || $DEPLOY_ENV  == "prod")
      when: manual
      allow_failure: true
    - if: '$DEPLOY_ENV != "dev" && $DEPLOY_ENV  != "int"'

Trivy Check Repo:
  extends: .Trivy Scan
  stage: security-scan
  needs:
    - job: Upload Artifacts STAGE
  tags:
    - eks-dev
  variables:
    TRIVY_TARGET: "$CI_PROJECT_DIR"
    TRIVY_SCAN_CMD: "filesystem"
  allow_failure: true

Deployment BizHub:
  stage: bizhub-deploy
  variables:
    STAGE: "review"
    CONNECT_CONFIG: "$BIZHUB_CONNECT_CONFIG"
  needs:
    - job: Deployment STAGE
  trigger:
    include:
      - local: /pipelines/bizhub-v3-api.yml
    strategy: depend
  except:
    variables:
      - $BIZHUB_DISABLE == "true"

LaP & PTA Test:
  extends: .jmeter
  stage: dynamic-test
  tags:
    - eks-dev
  needs:
    - job: Deployment BizHub
      optional: true
    - job: Deployment STAGE
  variables:
    CMMD_VAR: '-JbaseURL=dbds-feature.cnp-test.comp.db.de'
    ES_INDEX: "jmeter-results-${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}"
    ES_PORT: "80"
    ES_PROTOCOL: "https"
    TESTCASE_PATH: "test/lup/3BServices_LuP_Test.jmx"
    PLUGIN_PATH: "test/lup/plugins"
    ARTIFACTS_DIR: "artifacts"
  before_script:
    - mkdir -p ./artifacts/
    - sed -i -e "s/REPLACE_ELASTIC_INDEX/$ES_INDEX/g" $TESTCASE_PATH
    - sed -i -e "s/REPLACE_ELASTIC_HOST/$ES_HOST/g" $TESTCASE_PATH
    - sed -i -e "s/REPLACE_ELASTIC_PORT/$ES_PORT/g" $TESTCASE_PATH
    - sed -i -e "s/REPLACE_ELASTIC_PROTOCOL/$ES_PROTOCOL/g" $TESTCASE_PATH
  artifacts:
    paths:
      - artifacts/*
  # rules dev vs. int
  except:
    variables:
      - $LAP_TEST_DISABLE == "true"