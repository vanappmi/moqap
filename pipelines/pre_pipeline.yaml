---
stages:
  - dev
  - int
  - au
  - lup
  - prod


Entwicklungsumgebung:
  stage: dev
  include: 
    - local: pipelines/pipeline.yaml
      rules:
        - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH  != "development"  && $CI_COMMIT_BRANCH  !~ /^Release/ && ($CI_COMMIT_BRANCH =~ /^BBPT4/ || $CI_COMMIT_BRANCH =~ /^BABEDAS/ ) && $CI_COMMIT_TAG == null
          when: always

  variables:
    CI_DEBUG_TRACE: "true"
    VERSION_ENV: "bbr-dev"
    # SONARQUBE variables
    SONARQUBE_PROJECT_KEY: "BauBetrieblicheRegelung---Featurebranch"
    GITLEAKS_START_COMMIT: "b077b815fd38e8f98bea26b024fe6a3533a464dc"
    DEPLOY_ENV: "dev"
    STAGE_ENV: "dev"
    LAP_TEST_DISABLE: "true"
    TRIGGER_BUILD_MANUALLY: "true"
    PROJECT_RUNNER_TAG: "eks-entwicklung"
    BIZHUB_CONNECT_CONFIG: "pipelines/dev/bizhub/connect.yaml"
    BASE_SERVICE_URL: "https://${CI_PROJECT_NAME}-dev.bbpneo-iat.cnp-test.comp.db.de"
    SERVICE_URL: "https://${CI_PROJECT_NAME}-dev.bbpneo-dev-babedas.svc.cluster.local:443/actuator/info"

Entwicklungsumgebung B1:
  stage: dev
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH  != "development"  && $CI_COMMIT_BRANCH  !~ /^Release/ && ($CI_COMMIT_BRANCH =~ /^BBPT7/ || $CI_COMMIT_BRANCH =~ /^BONE/ ) && $CI_COMMIT_TAG == null
      when: always
  trigger:
    include: /pipelines/dev-b1/environment.yaml
    strategy: depend

Pipeline will not run:
  stage: dev
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH  != "development"  && $CI_COMMIT_BRANCH  !~ /^Release/ && $CI_COMMIT_BRANCH !~ /^BBPT4/ && $CI_COMMIT_BRANCH !~ /^BABEDAS/ && $CI_COMMIT_BRANCH !~ /^BBPT7/ && $CI_COMMIT_BRANCH !~ /^BONE/ && $CI_COMMIT_TAG == null
      when: always
  trigger:
    include: /pipelines/stop.yaml
    strategy: depend

Integrationstestumgebung:
  stage: int
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH  == "development" && $CI_COMMIT_TAG == null
      when: always
  trigger:
    include: /pipelines/int/environment.yaml
    strategy: depend

Release:
  stage: int
  needs:
    - job: Integrationstestumgebung
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH  == "development" && $CI_COMMIT_TAG == null
      when: always
  trigger:
    include: /pipelines/int/release.yaml
    strategy: depend

Release-Build:
  stage: int
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH  =~ /^Release/ && $CI_COMMIT_TAG == null
      when: always
  trigger:
    include: /pipelines/int/release-build.yaml
    strategy: depend

Abnahmetestumgebung:
  stage: au
  needs:
    - job: Release-Build
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH  =~ /^Release/ && $CI_COMMIT_TAG == null
      when: always
  trigger:
    include: /pipelines/au/environment.yaml
    strategy: depend

LUP-Umgebung:
  stage: lup
  needs:
    - job: Release-Build
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH  =~ /^Release/ && $CI_COMMIT_TAG == null
      when: always
  trigger:
    include: /pipelines/lup/environment.yaml
    strategy: depend

Produktionsumgebung:
  stage: prod
  needs:
    - job: Abnahmetestumgebung
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH  =~ /^Release/ && $CI_COMMIT_TAG == null
      when: always
  trigger:
    include: /pipelines/prod/environment.yaml
    strategy: depend
