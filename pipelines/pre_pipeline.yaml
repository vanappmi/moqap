---
variables:
  IS_COMMONLIB: "false"

stages:
  - dev
  - int
  - au
  - lup
  - prod


Entwicklungsumgebung:
  stage: dev
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH  != "development"  && $CI_COMMIT_BRANCH  !~ /^Release/ && ($CI_COMMIT_BRANCH =~ /^BBPT4/ || $CI_COMMIT_BRANCH =~ /^BABEDAS/ ) && $CI_COMMIT_TAG == null
      when: always
  trigger:
    include:
    - local: "pipelines/dev/environment.yaml"
    strategy: depend

Entwicklungsumgebung B1:
  stage: dev
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH  != "development"  && $CI_COMMIT_BRANCH  !~ /^Release/ && ($CI_COMMIT_BRANCH =~ /^BBPT7/ || $CI_COMMIT_BRANCH =~ /^BONE/ ) && $CI_COMMIT_TAG == null
      when: always
  trigger:
    include: /pipelines/dev-b1/environment.yaml
    strategy: depend

Renovate:
  stage: dev
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH != "development"  && $CI_COMMIT_BRANCH !~ /^Release/ && ($CI_COMMIT_BRANCH =~ /^renovate/ || $CI_COMMIT_BRANCH =~ /^renovate/ ) && $CI_COMMIT_TAG == null && $IS_COMMONLIB == "false"
      when: always
  trigger:
    include: /pipelines/int/release-build.yaml
    strategy: depend

Renovate CommonLibs:
  stage: dev
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH != "development"  && $CI_COMMIT_BRANCH !~ /^Release/ && ($CI_COMMIT_BRANCH =~ /^renovate/ || $CI_COMMIT_BRANCH =~ /^renovate/ ) && $CI_COMMIT_TAG == null && $IS_COMMONLIB == "true"
      when: always
  trigger:
    include: /pipelines/dev/environment.yaml
    strategy: depend

Pipeline will not run:
  stage: dev
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH  != "development"  && $CI_COMMIT_BRANCH  !~ /^Release/ && $CI_COMMIT_BRANCH !~ /^BBPT4/ && $CI_COMMIT_BRANCH !~ /^BABEDAS/ && $CI_COMMIT_BRANCH !~ /^BBPT7/ && $CI_COMMIT_BRANCH !~ /^BONE/ && $CI_COMMIT_BRANCH !~ /^renovate/ && $CI_COMMIT_TAG == null
      when: always
  trigger:
    include: /pipelines/stop.yaml
    strategy: depend

Integrationstestumgebung:
  stage: int
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH  == "development" && $CI_COMMIT_TAG == null && $IS_COMMONLIB == "false"
      when: always
  trigger:
    include: /pipelines/int/environment.yaml
    strategy: depend

Release:
  stage: int
  needs:
    - job: Integrationstestumgebung
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH  == "development" && $CI_COMMIT_TAG == null && $IS_COMMONLIB == "false"
      when: always
  trigger:
    include: /pipelines/int/release.yaml
    strategy: depend

Release CommonLibs:
  stage: int
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH  == "development" && $CI_COMMIT_TAG == null && $IS_COMMONLIB == "true"
      when: always
  trigger:
    include: /pipelines/dev/environment-release.yaml
    strategy: depend

Release-Build:
  stage: int
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH  =~ /^Release/ && $CI_COMMIT_TAG == null
      when: always
  trigger:
    include: /pipelines/int/release-build.yaml
    strategy: depend

Abnahmetestumgebung:
  stage: au
  needs:
    - job: Release-Build
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH  =~ /^Release/ && $CI_COMMIT_TAG == null
      when: always
  trigger:
    include: /pipelines/au/environment.yaml
    strategy: depend

LUP-Umgebung:
  stage: lup
  needs:
    - job: Release-Build
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH  =~ /^Release/ && $CI_COMMIT_TAG == null
      when: always
  trigger:
    include: /pipelines/lup/environment.yaml
    strategy: depend

Produktionsumgebung:
  stage: prod
  needs:
    - job: Abnahmetestumgebung
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH  =~ /^Release/ && $CI_COMMIT_TAG == null
      when: always
  trigger:
    include: /pipelines/prod/environment.yaml
    strategy: depend
